name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24'
      - name: Check formatting
        run: |
          fmt_output=$(gofmt -l .)
          if [ -n "$fmt_output" ]; then
            echo "The following files need gofmt:" >&2
            echo "$fmt_output" >&2
            exit 1
          fi
      - name: go vet
        run: go vet ./...

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24'
      - name: Run tests
        run: go test ./...

  contract-test:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24'
      - name: Validate admin analytics contract
        run: go test ./tests/contract

  build:
    runs-on: ubuntu-latest
    needs: contract-test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24'
      - name: Build API binary
        run: go build ./cmd/api

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Deploy to staging
        run: echo "Deploying to staging environment..."
      - name: Tag release v0.4.0-alpha
        if: github.ref == 'refs/heads/main'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tag = 'v0.4.0-alpha';
            try {
              await github.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `refs/tags/${tag}`,
                sha: context.sha
              });
            } catch (error) {
              if (error.status === 422) {
                await github.git.updateRef({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: `tags/${tag}`,
                  sha: context.sha,
                  force: true
                });
              } else {
                throw error;
              }
            }
